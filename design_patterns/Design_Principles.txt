Single Responsibility Principle (SRP)
    A piece of software should have one reason to change

Open/Closed Principle (OCP)
     A software artifact should be open for extension but closed for modification.

Liskov Substitution Principle (LSP)
    The LSP says that you should be able to substitute a parent (or base) type with a subtype.

Interface Segregation Principle (ISP)
    a client should not depend on a method that it does not use.

Dependency Inversion Principle (DIP)
    A high-level concrete class should not depend on a low-level concrete class. Instead, both should depend on abstractions.
    Abstractions should not depend upon details. Instead, the details should depend upon abstractions.



1. Separate the code that varies a lot from the code that does not vary